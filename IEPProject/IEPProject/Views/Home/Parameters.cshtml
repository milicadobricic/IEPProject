@model IEPProject.Data_Models.PortalParameters

@{
    ViewBag.Title = "Parameters";
}

<h2>Parameters</h2>


@using (Html.BeginForm("Parameters", "Home", FormMethod.Post, new { @class = "justify-content-center" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.N, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.N, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.N, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.D, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.D, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.D, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.S, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.S, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.S, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.G, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.G, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.G, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.P, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.P, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.P, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.C, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.C, new SelectList(ViewBag.Currencies), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.C, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@if (!string.IsNullOrWhiteSpace(ViewBag.StatusMessage))
{
    <div class="alert alert-danger">@ViewBag.StatusMessage</div>
}

<div>
    @Html.ActionLink("Change currency values", "Currencies", new { }, new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
