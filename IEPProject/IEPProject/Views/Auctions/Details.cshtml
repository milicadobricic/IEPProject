@model IEPProject.Data_Models.Auction

@{
    ViewBag.Title = "Details";
    ViewBag.ReturnPage = "Details";
}

<h2>Details</h2>

<div class="container text-center">

    <div class="row">
        <div class="col-md-4">
            @Html.Partial("DetailsPartial", Model)
        </div>

        <div class="col-md-8">
            @Html.Partial("BidsListPartial", Model.Bids)
        </div>

    </div>

</div>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        function formatLeadingZeros(x) {
            if (x < 10)
                return "0" + x;
            return "" + x;
        }

        function updateTime() {
            id = @Model.Id;
            var endDateString = document.getElementById("closing_time_" + id).innerHTML.trim();;
            var displayDiv = document.getElementById("remaining_time_" + id);
            var currentPrice = document.getElementById("current_price_name_" + id);
            var bidBy = document.getElementById("bid_by_" + id);
            var bidForm = document.getElementById("bid_form_" + id);

            var endDate = Date.parse(endDateString);
            var now = Date.now().valueOf();
            var remaining = Math.floor((endDate - now) / 1000);

            if (remaining > 0) {
                var hours = Math.floor(remaining / 3600);
                var minutes = Math.floor((remaining % 3600) / 60);
                var seconds = remaining % 60;

                var displayString = "" + formatLeadingZeros(hours) + ":" + formatLeadingZeros(minutes) + ":" + formatLeadingZeros(seconds);
                displayDiv.innerHTML = displayString;
            }
            else {
                displayDiv.classList.add("text-danger");
                displayDiv.innerHTML = "Auction closed!";
                currentPrice.innerHTML = "Final price";
                bidBy.classList.add("text-success");
                bidBy.innerHTML = "Won by";
                bidForm.hidden = true;
            }
        }

        $(function () {
            updateTime();
            setInterval(updateTime, 500);

            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.priceChangeHub;
            // Create a function that the hub can call back to display messages.
            chat.client.updatePrice = function (auctionId, price, username) {
                var currentPrice = document.getElementById('current_price_' + auctionId);
                var inputPrice = document.getElementById('input_price_' + auctionId);
                var currentUser = document.getElementById('current_user_' + auctionId);
                var currentPriceName = document.getElementById('current_price_name_' + auctionId);
                var bidBy = document.getElementById('bid_by_' + auctionId);
                if (currentPrice) {
                    currentPrice.innerHTML = price;
                    inputPrice.value = parseFloat(price) + 1;
                    currentUser.innerHTML = username;
                    currentPriceName.innerText = "Current price";
                    bidBy.innerText = "Bid by:";
                }
            };
            // Start the connection.
            $.connection.hub.start()
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
